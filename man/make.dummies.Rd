% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tool_misc.R
\name{make.dummies}
\alias{make.dummies}
\title{Create a Dummy Matrix}
\usage{
make.dummies(x, base = 1L, base.add = TRUE)
}
\arguments{
\item{x}{a factor from which the dummies are created (x is coerced to
factor if not yet a factor)}

\item{base}{integer or character, specifies the reference level (base), if
integer it refers to position in \code{levels(x)}, if character the name
of a level,}

\item{base.add}{logical, if \code{TRUE} the reference level (base) is added
to the return value as first column, if \code{FALSE} the reference
level is not included.}
}
\value{
A matrix containing the contrast-coded dummies, dimensions are n x n
where \code{n = length(levels(x))} if argument  \code{base.add = TRUE} or
\code{n = length(levels(x)-1)} if \code{base.add = FALSE}.
}
\description{
Contrast-coded dummy matrix created from a factor
}
\details{
This function creates a matrix of dummies from the levels of a factor.
In model estimations, it is usually preferable to not create the dummy matrix
prior to estimation but to simply specify a factor in the formula and let the
estimation function handle the creation of the dummies.

This function is merely a convenience wrapper around \code{stats::contr.treatment}
to ease the dummy matrix creation process shall the dummy matrix be explicitly
required. See Examples for a use case in LSDV (least squares dummy variable)
model estimation and how to merge the dummy matrix to a data.frame.
}
\examples{
library(plm)
data("Grunfeld", package = "plm")
Grunfeld <- Grunfeld[1:100, ] # reduce data set (down to 5 firms)
firm.dum <- make.dummies(Grunfeld$firm) # gives 5 x 5 matrix

# add a column named "firm" to be able to merge to the original data set by
# a column of the same name
firm.dum <- data.frame(cbind("firm" = rownames(firm.dum), data.frame(firm.dum)))
Grunfeld <- merge(Grunfeld, firm.dum)
head(Grunfeld) # NB: merge() sorts rows and re-orders columns
# better to create the pdata.frame post hoc:
pGrun <- pdata.frame(Grunfeld, index = c("firm", "year"))

## Model estimation:
## estimate within model (individual/firm effects) and LSDV models (firm dummies)
# within model:
plm(inv ~ value + capital, data = pGrun, model = "within")

# LSDV with user-created dummies by make.dummies:
form_dummies <- paste0("X", c(1:5), collapse = "+")
form_dummies <- formula(paste0("inv ~ value + capital + ", form_dummies))
plm(form_dummies, data = pGrun, model = "pooling") # last dummy (X10) is dropped

# LSDV via factor(year) -> let estimation function generate dummies:
plm(inv ~ value + capital + factor(firm), data = pGrun, model = "pooling")
}
\seealso{
\code{\link[stats:contrast]{stats::contr.treatment()}}, \code{\link[stats:contrasts]{stats::contrasts()}}
}
\author{
Kevin Tappe
}
\keyword{manip}
